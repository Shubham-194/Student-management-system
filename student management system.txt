#include <stdio.h>

#include <stdlib.h>

#include <string.h>



#define MAX_STUDENTS 100



typedef struct {

    int id;

    char name[50];

    double mobile; 

    float cgpa;

} Student;



Student students[MAX_STUDENTS];

int studentCount = 0;



void addStudent() {

    if (studentCount >= MAX_STUDENTS) {

        printf("Cannot add more students. Maximum limit reached.\n");

        return;

    }

    Student newStudent;

    printf("Enter Student ID: ");

    scanf("%d", &newStudent.id);



    printf("Enter Student Name: ");

    scanf(" %[^\n]", newStudent.name); // Read string with spaces



    printf("Enter Mobile Number: ");

    while (1) {

        scanf("%lf", &newStudent.mobile);

        if (newStudent.mobile < 1000000000 || newStudent.mobile > 9999999999) {

            printf("Invalid mobile number. Please enter a number with 10 digits: ");

        } else {

            break;

        }

    }



    printf("Enter CGPA: ");

    scanf("%f", &newStudent.cgpa);

    

    students[studentCount++] = newStudent;

    printf("Student added successfully!\n");

}



void displayStudents() {

    if (studentCount == 0) {

        printf("No students found.\n");

        return;

    }

    

    printf("\n%10s | %10s | %15s | %10s\n", "ID", "Name", "Mobile", "CGPA");

    printf("-------------------------------------------------------------\n");

    for (int i = 0; i < studentCount; i++) {

        printf("%10d | %10s | %15.0lf | %.2f\n", 

               students[i].id, students[i].name, students[i].mobile, students[i].cgpa);

    }

}



void searchStudent() {

    int searchId;

    printf("Enter Student ID to search: ");

    scanf("%d", &searchId);

    for (int i = 0; i < studentCount; i++) {

        if (students[i].id == searchId) {

            printf("Found Student - ID: %d, Name: %s, Mobile: %.0lf, CGPA: %.2f\n", 

                   students[i].id, students[i].name, students[i].mobile, students[i].cgpa);

            return;

        }

    }

    printf("Student not found.\n");

}



void deleteStudent() {

    int deleteId;

    printf("Enter Student ID to delete: ");

    scanf("%d", &deleteId);

    for (int i = 0; i < studentCount; i++) {

        if (students[i].id == deleteId) {

            for (int j = i; j < studentCount - 1; j++) {

                students[j] = students[j + 1];

            }

            studentCount--;

            printf("Student deleted successfully!\n");

            return;

        }

    }

    printf("Student not found.\n");

}



void updateStudent() {

    int updateId;

    printf("Enter Student ID to update: ");

    scanf("%d", &updateId);

    for (int i = 0; i < studentCount; i++) {

        if (students[i].id == updateId) {

            printf("Enter new Name (leave blank to keep current): ");

            char newName[50];

            scanf(" %[^\n]", newName);

            if (strlen(newName) > 0) {

                strcpy(students[i].name, newName);

            }



            printf("Enter new Mobile Number (leave blank to keep current): ");

            char newMobile[15];

            scanf(" %[^\n]", newMobile);

            if (strlen(newMobile) > 0) {

                double mobileNum = atof(newMobile);

                if (mobileNum >= 1000000000 && mobileNum <= 9999999999) {

                    students[i].mobile = mobileNum;

                } else {

                    printf("Invalid mobile number. Keeping current value: %.0lf\n", students[i].mobile);

                }

            }



            printf("Enter new CGPA (leave blank to keep current): ");

            char newCgpa[10];

            scanf(" %[^\n]", newCgpa);

            if (strlen(newCgpa) > 0) {

                students[i].cgpa = atof(newCgpa);

            }

            printf("Student updated successfully!\n");

            return;

        }

    }

    printf("Student not found.\n");

}



int main() {

    int choice;

    while (1) {

        printf("\nStudent Management System\n");

        printf("1. Add Student\n");

        printf("2. Display Students\n");

        printf("3. Search Student\n");

        printf("4. Delete Student\n");

        printf("5. Update Student\n");

        printf("6. Exit\n");

        printf("Enter your choice: ");

        scanf("%d", &choice);



        switch (choice) {

            case 1: addStudent(); break;

            case 2: displayStudents(); break;

            case 3: searchStudent(); break;

            case 4: deleteStudent(); break;

            case 5: updateStudent(); break;

            case 6: printf("Exiting the program.\n"); exit(0);

            default: printf("Invalid choice! Please try again.\n");

        }

    }

    return 0;

}
